#include<iostream>
using namespace std;

int f[2][1025][51];
bool v[12];
int c[1025],s[1025];
int n,k,tot,m,p,j;
int ans;

void dfs(int step);
{
  int i;
  if (step == n)
    {
      ++tot;
      for(i = 1; i <= n ; ++ i)
	{
	  if ( v[i] > 0)
	    {
	      ++c[ tot ];
	      s[tot] = s[tot] + 1 << (i-1);
	    }
	  return ;
	}
    }
  dfs( step + 1 );
  
  if ( not v[step] )
    {
      v[step+1] = true;
      dfs(step+1);
      v[step+1] = false;
    }
  return ;
}

int main()
{  
  cin>>n>>m;
  if (m*m > (n+1)/2 )
    {cout<<0<<"\n";return 0;}

  dfs(0);

  f[0][1][0] = 1;

  for (i = 1 ; i <= n ; ++ i)
    {
      for (j = 1; j <= tot ; ++ j)
	for (k = c[j] ; k <= m ; ++ k)
	  for (p = 1 ; p <= tot ; ++ p)
	    if (
		(s[p] & s[j]) == 0 and 
		(s[j] << 1) & s[p]) == 0 and ((s[j] shr 1) and s[p]=0) and (k-c[j]>=c[p]))
            f[i and 1,j,k]:=f[i and 1,j,k]+f[1-i and 1,p,k-c[j]];
    fillchar(f[1-i and 1],sizeof(f[1-i and 1]),0);
    end;
  ans:=0;
  for i:=1 to tot do
    inc(ans,f[n and 1,i,m]);
  writeln(ans);
  close(input); close(output);
end.
