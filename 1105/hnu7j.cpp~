#include<iostream>
#define MAXN 2000005
using namespace std;

class theap
{
public:
  int v,d;
};

theap heap[ MAXN ];

int n,m,hsize,ans,lmax;

void mheapify(int i )
{
  int l,r,largest;
  theap t;
  l = i << 1;
  r = ( i << 1 ) + 1;
  if( l <= hsize and heap[ i ].v < heap[ l ].v)
    largest = l;
  else largest = i;
  if( r <= hsize and heap[ largest ].v < heap[ r ].v )
    largest = r;
  if( largest not_eq i)
    {
      t = heap[ largest ] ; heap[ largest ] = heap[ i ] ; heap[ i ] = t;
      mheapify( largest );
    }
  return ;
}

void create()
{
  int i;
  hsize = n;
  for( i = n / 2  ; i >= 1 ; -- i)
    mheapify( i );
  return ;
}

theap exmax()
{
  theap tmax;
  tmax = heap[ 1 ];
  heap[ 1 ] = heap[ hsize ];
  --hsize;
  mheapify( 1 );
  return tmax;
}

int main()
{
  int i ;
  theap tmp;
  while(cin>>n>>m)
    {
      ans = 0 ;lmax = 0;
      for( i = 1 ;i <= n ; ++ i)
	{
	  cin>>heap[ i ].d>>heap[ i ].v;
	  if( lmax < heap[ i ].d ) lmax = heap[ i ].d;
	}
      create();
      m = lmax;
      while( m > 0 )
	{
	  tmp.d = 0 ;tmp.v = 0 ;
	  if( hsize > 0 )
	    do{
	      tmp = exmax();
	      for( i = 1 ; i <= hsize ; ++ i) cout<<heap[ i ].v<<" ";cout<<"\n";
	    }while( tmp.d < m and hsize > 0 );
	  cout<<tmp.d<<" "<<m<<"!!!\n";
	  if(tmp.d >= m )
	    ans += tmp.v;
	  --m;
	}
      cout<<ans<<"\n";
    }
  return 0;
}
