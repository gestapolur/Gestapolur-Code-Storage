#include <stdio.h>
#include <string.h>

char a[1010], b[10000];
int ac[1010][26], min[2][1010][2];

void init_AC(char *p) {
    int pi[1010], k = -1, len = strlen(p);
pi[0] = -1;
memset(ac, 0, sizeof(ac));
ac[0][*p - 'a'] = 1;
for(int i = 1; i < len; ++i) {
   while(k >= 0 && p[k + 1] != p[i]) k = pi[k];
   if(p[k + 1] == p[i]) ++k;
        pi[i] = k;
   memcpy(ac[i], ac[pi[i - 1] + 1], sizeof(ac[0]));
        ac[i][p[i] - 'a'] = i + 1;
}
}


int solve() {
    int i, j, l, k, re = -1;
    memset(min, -1, sizeof(min));
    min[0][0][0] = 0; min[0][0][1] = -1;
    min[1][0][0] = 0; min[1][0][1] = -1;
    for(i = 0; b[i]; ++i) {
        l = b[i] - 'a';
        for(j = 0; a[j] && min[0][j][0] != -1; ++j) {
            k = ac[j][l];
            if(min[1][k][0] == - 1 || min[1][k][0] - min[1][k][1] > min[0][j][0] - min[0][j][1] - 1) {
                    min[1][k][0] = min[0][j][0] + i - min[0][j][1] - 1;
                    min[1][k][1] = i;
            }
        }
        memcpy(min[0], min[1], sizeof(min[0]));
    }
    for(j = 0; a[j] && min[0][j][0] != -1; ++j) {
        if(re == -1 || min[0][j][0] + i - min[0][j][1] - 1 < re) {
            re = min[0][j][0] + i - min[0][j][1] - 1;
        }
    }
    return re;
}

int main() {
while(gets(b)) {
        gets(a);
        init_AC(a);
        printf("%d\n", solve());
}
return 0;
}
